name: Deploy

on:
  push:
    branches:
      - "main"
    paths:
      - "packages/metro-hermes-compiler/**"
      - ".github/workflows/build-emhermesc.yml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.0.0

      - name: Get hermes revision
        run: echo "HERMES_REVISION=`cat packages/metro-hermes-compiler/hermes-revision`" >> $GITHUB_ENV

      - name: Use the value
        run: |
          echo "${{ env.HERMES_REVISION }}" # This will output 'yellow'

      - name: Clone hermes
        run: |
          mkdir $RUNNER_TEMP/hermes && curl \
            -L https://api.github.com/repos/facebook/hermes/tarball/${{ env.HERMES_REVISION }} \
            | tar xzf - -C $RUNNER_TEMP/hermes \
            && echo "HERMES_CHECKOUT=`ls -d $RUNNER_TEMP/hermes/*`" >> $GITHUB_ENV

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@856654e80dd21909aec244cd01bb96e5c841d64f

      - name: Configure build_host_hermes
        run: python3 $HERMES_CHECKOUT/utils/build/configure.py $RUNNER_TEMP/build_host_hermes
      
      - name: Build build_host_hermes
        run: cmake --build $RUNNER_TEMP/build_host_hermes --target hermesc

      - name: Setup EMSDK
        uses: mymindstorm/setup-emsdk@v11

      - name: Configure Emscripten build
        run: |
          cmake $HERMES_CHECKOUT \
            -B $RUNNER_TEMP/embuild \
            -DCMAKE_TOOLCHAIN_FILE=$EMSDK/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_EXE_LINKER_FLAGS=" \
              -s BINARYEN_ASYNC_COMPILATION=0 \
              -s ENVIRONMENT=node \
              -s EXPORT_NAME=createHermesc \
              -s EXTRA_EXPORTED_RUNTIME_METHODS=[cwrap,ccall] \
              -s MODULARIZE=1 \
              -s NODERAWFS=1 \
              -s WASM=1 \
              -s ALLOW_MEMORY_GROWTH=1 \
              -s NODEJS_CATCH_EXIT=0 \
              -s NODEJS_CATCH_REJECTION=0 \
              -s WASM_ASYNC_COMPILATION=0 \
              -s SINGLE_FILE=1 \
              " \
            -DIMPORT_HERMESC:PATH="$RUNNER_TEMP/build_host_hermes/ImportHermesc.cmake"

      - name: Build
        run: cmake --build $RUNNER_TEMP/embuild --target emhermesc

      - name: Move build output
        run: mv $RUNNER_TEMP/embuild/bin ./output

      - name: Show output
        run: ls -la output

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: output
